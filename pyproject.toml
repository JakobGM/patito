[project]
name = "patito"
version = "0.8.4"
description = "A dataframe modelling library built on top of polars and pydantic."
authors = [
    { name = "Jakob Gerhard Martinussen", email = "jakobgm@gmail.com" },
    { name = "Thomas Aarholt", email = "thomasaarholt@gmail.com" },
]
requires-python = ">=3.9"
readme = "README.md"
license = "MIT"
keywords = [
    "validation",
    "dataframe",
]
dependencies = [
    "pydantic>=2.7.0",
    "polars>=1.10.0",
    "typing-extensions",
]

[project.optional-dependencies]
caching = ["pyarrow>=5.0.0"]
pandas = ["pandas"]

[project.urls]
Homepage = "https://github.com/JakobGM/patito"
Repository = "https://github.com/JakobGM/patito"
Documentation = "https://patito.readthedocs.io"

[dependency-groups]
dev = [
    "uv",
    "nox",
    "nox-uv>=0.6.0",
    "ruff>=0.2.1",
    "pre-commit>=3.8.0,<4",
    "coverage[toml]",
    "pyright>=1.1.239",
    "pytest>=7.1.2",
    "pytest-cov>=3.0.0",
    "pytest-watcher>=0.2.3 ; python_version >= '3.9' and python_version < '4.0'",
    "xdoctest>=1.0.0",
    "mypy>=0.950",
    "types-setuptools>=57.4.14",
    "pandas-stubs>=1.2.0",
    "codecov>=2.1.12,<3",
    "blackdoc",
    "ipykernel>=6.29.4,<7",
    "Sphinx<7",
    "nox-uv>=0.6.0",
]

docs = [
    "sphinx-autobuild",
    "sphinx-autodoc-typehints",
    "sphinx-rtd-theme",
    "sphinx-toolbox",
    "sphinxcontrib-mermaid",]

[tool.uv]
default-groups = [
    "dev",
    "docs",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
filterwarnings = [
    # Convert warnings into test errors
    "error",
    "ignore:pygments is not installed*:UserWarning",
    "ignore:unclosed running multiprocessing pool*:ResourceWarning",
]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["patito"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if not _PANDAS_AVAILABLE:",
  "except ImportError:",
]
fail_under = 99.64
show_missing = true

[tool.pyright]
typeCheckingMode = "basic"
venvPath =  "."
venv =  ".venv"
pythonVersion = "3.9"

exclude = [
  ".venv",
  "noxfile.py",
  "**/node_modules",
  "**/__pycache__",
  "**/.*"
]

[tool.mypy]
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
strict_optional = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
allow_redefinition = true
show_error_codes = true
exclude = [
  "noxfile.py",
  "**/node_modules",
  "**/__pycache__",
  "**/.*"
]

[[tool.mypy.overrides]]
module = ["tests.test_validators"]
warn_unused_ignores = false

[tool.ruff]
target-version = "py39"
extend-exclude= ["tests/__init__.py"]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "B", "D", "UP"]
ignore = ["UP007"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true
